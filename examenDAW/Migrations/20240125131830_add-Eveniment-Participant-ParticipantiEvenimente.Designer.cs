// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using examenDAW.Data;

#nullable disable

namespace examenDAW.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240125131830_add-Eveniment-Participant-ParticipantiEvenimente")]
    partial class addEvenimentParticipantParticipantiEvenimente
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("examenDAW.Models.Eveniment.Eveniment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Evenimente");
                });

            modelBuilder.Entity("examenDAW.Models.Participant.Participant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Roluri")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Varsta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Participanti");
                });

            modelBuilder.Entity("examenDAW.Models.ParticipantiEvenimente.ParticipantiEvenimente", b =>
                {
                    b.Property<Guid>("ParticipantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EvenimentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ParticipantId", "EvenimentId");

                    b.HasIndex("EvenimentId");

                    b.ToTable("ParticipantiEvenimente");
                });

            modelBuilder.Entity("examenDAW.Models.ParticipantiEvenimente.ParticipantiEvenimente", b =>
                {
                    b.HasOne("examenDAW.Models.Eveniment.Eveniment", "Eveniment")
                        .WithMany("ParticipantiEvenimente")
                        .HasForeignKey("EvenimentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("examenDAW.Models.Participant.Participant", "Participant")
                        .WithMany("ParticipantiEvenimente")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eveniment");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("examenDAW.Models.Eveniment.Eveniment", b =>
                {
                    b.Navigation("ParticipantiEvenimente");
                });

            modelBuilder.Entity("examenDAW.Models.Participant.Participant", b =>
                {
                    b.Navigation("ParticipantiEvenimente");
                });
#pragma warning restore 612, 618
        }
    }
}
